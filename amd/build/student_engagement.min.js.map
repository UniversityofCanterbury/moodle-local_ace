{"version":3,"sources":["../src/student_engagement.js"],"names":["init","updateGraph","startDatetime","endDateTime","url","URL","window","location","href","params","URLSearchParams","search","userid","parseInt","get","courseid","has","engagementDataPromise","getUserEngagementData","then","response","error","displayError","series","length","langString","catch","graphData","getGraphDataPlaceholder","values","average1","average2","labels","axes","y","max","stepSize","stepsize","yLabels","ylabels","forEach","element","value","label","data","chartArea","document","querySelector","chartImage","innerHTML","ChartBuilder","make","chart","ChartJSOutput","start","end","Ajax","call","methodname","args"],"mappings":"uPAuBA,OAEA,OACA,O,0DAMoB,QAAPA,CAAAA,IAAO,EAAM,CACtB,WAAYC,CAAZ,EACAA,CAAW,CAAC,IAAD,CAAO,IAAP,CACd,C,IAQKA,CAAAA,CAAW,CAAG,SAACC,CAAD,CAAgBC,CAAhB,CAAgC,IAC5CC,CAAAA,CAAG,CAAG,GAAIC,CAAAA,GAAJ,CAAQC,MAAM,CAACC,QAAP,CAAgBC,IAAxB,CADsC,CAE5CC,CAAM,CAAG,GAAIC,CAAAA,eAAJ,CAAoBN,CAAG,CAACO,MAAxB,CAFmC,CAG5CC,CAAM,CAAGC,QAAQ,CAACJ,CAAM,CAACK,GAAP,CAAW,IAAX,CAAD,CAH2B,CAI5CC,CAAQ,CAAG,IAJiC,CAKhD,GAAIN,CAAM,CAACO,GAAP,CAAW,QAAX,CAAJ,CAA0B,CACtBD,CAAQ,CAAGF,QAAQ,CAACJ,CAAM,CAACK,GAAP,CAAW,QAAX,CAAD,CACtB,CACD,GAAIG,CAAAA,CAAqB,CAAGC,CAAqB,CAACH,CAAD,CAAWH,CAAX,CAAmBV,CAAnB,CAAkCC,CAAlC,CAArB,CAAoEgB,IAApE,CAAyE,SAASC,CAAT,CAAmB,CACpH,GAAuB,IAAnB,GAAAA,CAAQ,CAACC,KAAb,CAA6B,CACzBC,CAAY,CAACF,CAAQ,CAACC,KAAV,CAAZ,CACA,MAAO,KACV,CAHD,IAGO,IAA+B,CAA3B,GAAAD,CAAQ,CAACG,MAAT,CAAgBC,MAApB,CAAkC,CACrC,iBAAU,aAAV,CAAyB,WAAzB,EAAsCL,IAAtC,CAA2C,SAACM,CAAD,CAAgB,CACvDH,CAAY,CAACG,CAAD,CAEf,CAHD,EAGGC,KAHH,GAIA,MAAO,KACV,CAGD,GAAIC,CAAAA,CAAS,CAAGC,CAAuB,EAAvC,CACAD,CAAS,CAACJ,MAAV,CAAiB,CAAjB,EAAoBM,MAApB,CAA6BT,CAAQ,CAACG,MAAtC,CACAI,CAAS,CAACJ,MAAV,CAAiB,CAAjB,EAAoBM,MAApB,CAA6BT,CAAQ,CAACU,QAAtC,CACAH,CAAS,CAACJ,MAAV,CAAiB,CAAjB,EAAoBM,MAApB,CAA6BT,CAAQ,CAACW,QAAtC,CACAJ,CAAS,CAACK,MAAV,CAAmBZ,CAAQ,CAACY,MAA5B,CACAL,CAAS,CAACM,IAAV,CAAeC,CAAf,CAAiB,CAAjB,EAAoBC,GAApB,CAA0Bf,CAAQ,CAACe,GAAnC,CACAR,CAAS,CAACM,IAAV,CAAeC,CAAf,CAAiB,CAAjB,EAAoBE,QAApB,CAA+BhB,CAAQ,CAACiB,QAAxC,CACA,GAAIC,CAAAA,CAAO,CAAG,EAAd,CACAlB,CAAQ,CAACmB,OAAT,CAAiBC,OAAjB,CAAyB,SAACC,CAAD,CAAa,CAClCH,CAAO,CAACG,CAAO,CAACC,KAAT,CAAP,CAAyBD,CAAO,CAACE,KACpC,CAFD,EAGAhB,CAAS,CAACM,IAAV,CAAeC,CAAf,CAAiB,CAAjB,EAAoBF,MAApB,CAA6BM,CAA7B,CAEA,MAAOX,CAAAA,CACV,CA3B2B,EA2BzBD,KA3ByB,CA2BnB,UAAW,CAChBJ,CAAY,CAAC,uBAAD,CACf,CA7B2B,CAA5B,CA+BAL,CAAqB,CAACE,IAAtB,CAA2B,SAACyB,CAAD,CAAU,CACjC,GAAa,IAAT,GAAAA,CAAJ,CAAmB,CACf,MACH,CAHgC,GAI7BC,CAAAA,CAAS,CAAGC,QAAQ,CAACC,aAAT,CAAuB,wBAAvB,CAJiB,CAK7BC,CAAU,CAAGH,CAAS,CAACE,aAAV,CAAwB,cAAxB,CALgB,CAMjCC,CAAU,CAACC,SAAX,CAAuB,EAAvB,CACAC,UAAaC,IAAb,CAAkBP,CAAlB,EAAwBzB,IAAxB,CAA6B,SAACiC,CAAD,CAAW,CACpC,GAAIC,UAAJ,CAAkBL,CAAlB,CAA8BI,CAA9B,CAEH,CAHD,EAGG1B,KAHH,EAKH,CAZD,EAYGA,KAZH,EAaH,C,CAOKJ,CAAY,CAAG,SAACG,CAAD,CAAgB,IAC7BoB,CAAAA,CAAS,CAAGC,QAAQ,CAACC,aAAT,CAAuB,wBAAvB,CADiB,CAE7BC,CAAU,CAAGH,CAAS,CAACE,aAAV,CAAwB,cAAxB,CAFgB,CAGjCC,CAAU,CAACC,SAAX,CAAuBxB,CAC1B,C,CAWKP,CAAqB,CAAG,SAACH,CAAD,CAAWH,CAAX,CAAmB0C,CAAnB,CAA0BC,CAA1B,CAAkC,CAC5D,MAAOC,WAAKC,IAAL,CAAU,CAAC,CACdC,UAAU,CAAE,oCADE,CAEdC,IAAI,CAAE,CACF,SAAY5C,CADV,CAEF,OAAUH,CAFR,CAGF,MAAS0C,CAHP,CAIF,IAAOC,CAJL,CAFQ,CAAD,CAAV,EAQH,CARG,CASV,C,CAQK3B,CAAuB,CAAG,UAAM,CAClC,MAAO,CACH,KAAQ,MADL,CAEH,OAAU,CACN,CACI,MAAS,kBADb,CAEI,OAAU,IAFd,CAGI,KAAQ,IAHZ,CAII,OAAU,IAJd,CAKI,OAAU,CAAC,SAAD,CALd,CAMI,KAAQ,IANZ,CAOI,KAAQ,CACJ,EAAK,IADD,CAEJ,EAAK,IAFD,CAPZ,CAWI,KAAQ,EAXZ,CAYI,OAAU,IAZd,CADM,CAeN,CACI,MAAS,2BADb,CAEI,OAAU,IAFd,CAGI,KAAQ,IAHZ,CAII,OAAU,IAJd,CAKI,OAAU,CAAC,SAAD,CALd,CAMI,KAAQ,IANZ,CAOI,KAAQ,CACJ,EAAK,IADD,CAEJ,EAAK,IAFD,CAPZ,CAWI,KAAQ,EAXZ,CAYI,OAAU,IAZd,CAfM,CA6BN,CACI,MAAS,2BADb,CAEI,OAAU,IAFd,CAGI,KAAQ,IAHZ,CAII,OAAU,IAJd,CAKI,OAAU,CAAC,SAAD,CALd,CAMI,KAAQ,CANZ,CAOI,KAAQ,CACJ,EAAK,IADD,CAEJ,EAAK,IAFD,CAPZ,CAWI,KAAQ,EAXZ,CAYI,OAAU,IAZd,CA7BM,CAFP,CA8CH,OAAU,IA9CP,CA+CH,MAAS,IA/CN,CAgDH,KAAQ,CACJ,EAAK,EADD,CAEJ,EAAK,CACD,CACI,MAAS,IADb,CAEI,OAAU,EAFd,CAGI,IAAO,IAHX,CAII,IAAO,CAJX,CAKI,SAAY,IALhB,CAMI,SAAY,IANhB,CADC,CAFD,CAhDL,CA6DH,eAAkB,CACd,UADc,CA7Df,CAgEH,gBAAmB,IAhEhB,CAiEH,SAjEG,CAmEV,C","sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Uses the local_ace webservices to create engagement charts\n *\n * @module      local_ace/student_engagement\n * @copyright   2021 University of Canterbury\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport {get_string as getString} from 'core/str';\nimport ChartBuilder from 'core/chart_builder';\nimport ChartJSOutput from 'core/chart_output_chartjs';\nimport {init as filtersInit} from 'local_ace/chart_filters';\n\n/**\n * Retrieves data from the local_ace webservice to populate an engagement graph\n */\nexport const init = () => {\n    filtersInit(updateGraph);\n    updateGraph(null, null);\n};\n\n/**\n * Update the graph display based on values fetched from a webservice.\n *\n * @param {Number|null} startDatetime\n * @param {Number|null} endDateTime\n */\nconst updateGraph = (startDatetime, endDateTime) => {\n    let url = new URL(window.location.href);\n    let params = new URLSearchParams(url.search);\n    let userid = parseInt(params.get('id'));\n    let courseid = null;\n    if (params.has('course')) {\n        courseid = parseInt(params.get('course'));\n    }\n    let engagementDataPromise = getUserEngagementData(courseid, userid, startDatetime, endDateTime).then(function(response) {\n        if (response.error !== null) {\n            displayError(response.error);\n            return null;\n        } else if (response.series.length === 0) {\n            getString('noanalytics', 'local_ace').then((langString) => {\n                displayError(langString);\n                return;\n            }).catch();\n            return null;\n        }\n\n        // Populate empty fields.\n        let graphData = getGraphDataPlaceholder();\n        graphData.series[0].values = response.series;\n        graphData.series[1].values = response.average1;\n        graphData.series[2].values = response.average2;\n        graphData.labels = response.labels;\n        graphData.axes.y[0].max = response.max;\n        graphData.axes.y[0].stepSize = response.stepsize;\n        let yLabels = {};\n        response.ylabels.forEach((element) => {\n            yLabels[element.value] = element.label;\n        });\n        graphData.axes.y[0].labels = yLabels;\n\n        return graphData;\n    }).catch(function() {\n        displayError(\"API returned an error\");\n    });\n\n    engagementDataPromise.then((data) => {\n        if (data === null) {\n            return;\n        }\n        let chartArea = document.querySelector('#chart-area-engagement');\n        let chartImage = chartArea.querySelector('.chart-image');\n        chartImage.innerHTML = \"\";\n        ChartBuilder.make(data).then((chart) => {\n            new ChartJSOutput(chartImage, chart);\n            return;\n        }).catch();\n        return;\n    }).catch();\n};\n\n/**\n * Display an error on the page, which replaces the engagement graphs on the page.\n *\n * @param {string} langString Text displayed on the page\n */\nconst displayError = (langString) => {\n    let chartArea = document.querySelector('#chart-area-engagement');\n    let chartImage = chartArea.querySelector('.chart-image');\n    chartImage.innerHTML = langString;\n};\n\n/**\n * Get analytics data for specific user and course, within a certain period and after a starting time.\n *\n * @param {number|null} courseid Course ID\n * @param {number} userid User ID\n * @param {number} start Start time of analytics period in seconds\n * @param {end} end End of analytics period in seconds\n * @returns {Promise}\n */\nconst getUserEngagementData = (courseid, userid, start, end) => {\n    return Ajax.call([{\n        methodname: 'local_ace_get_user_analytics_graph',\n        args: {\n            'courseid': courseid,\n            'userid': userid,\n            'start': start,\n            'end': end\n        },\n    }])[0];\n};\n\n/**\n * Get a graph.js data object filled out with the values we need for a student engagement graph.\n * TODO: Pull graph colours from plugin settings.\n *\n * @returns {Object}\n */\nconst getGraphDataPlaceholder = () => {\n    return {\n        \"type\": \"line\",\n        \"series\": [\n            {\n                \"label\": \" Your engagement\",\n                \"labels\": null,\n                \"type\": null,\n                \"values\": null,\n                \"colors\": [\"#5cb85c\"],\n                \"fill\": null,\n                \"axes\": {\n                    \"x\": null,\n                    \"y\": null\n                },\n                \"urls\": [],\n                \"smooth\": null\n            },\n            {\n                \"label\": \"Average course engagement\",\n                \"labels\": null,\n                \"type\": null,\n                \"values\": null,\n                \"colors\": [\"#CEE9CE\"],\n                \"fill\": null,\n                \"axes\": {\n                    \"x\": null,\n                    \"y\": null\n                },\n                \"urls\": [],\n                \"smooth\": null\n            },\n            {\n                \"label\": \"Average course engagement\",\n                \"labels\": null,\n                \"type\": null,\n                \"values\": null,\n                \"colors\": [\"#CEE9CE\"],\n                \"fill\": 1,\n                \"axes\": {\n                    \"x\": null,\n                    \"y\": null\n                },\n                \"urls\": [],\n                \"smooth\": null\n            }\n        ],\n        \"labels\": null,\n        \"title\": null,\n        \"axes\": {\n            \"x\": [],\n            \"y\": [\n                {\n                    \"label\": null,\n                    \"labels\": {},\n                    \"max\": null,\n                    \"min\": 0,\n                    \"position\": null,\n                    \"stepSize\": null\n                }\n            ]\n        },\n        \"legend_options\": {\n            \"display\": false\n        },\n        \"config_colorset\": null,\n        \"smooth\": true\n    };\n};\n"],"file":"student_engagement.min.js"}