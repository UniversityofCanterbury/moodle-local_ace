{"version":3,"sources":["../src/student_engagement.js"],"names":["USER_ID","COMPARISON_OPTION","START_TIME","END_TIME","SHOW_ALL_COURSES","COURSE_COLOUR_MATCH","init","parameters","userid","updateGraph","params","URLSearchParams","URL","window","location","href","search","has","parseInt","get","document","querySelector","style","display","chartComparisonButton","addEventListener","createChartComparisonModal","getComparisonMethodPreference","then","response","error","displayError","preferences","value","catch","Notification","exception","showAllCourses","showYourCourse","modalPromise","ModalFactory","create","type","types","SAVE_CANCEL","modal","getRoot","classList","add","setTitle","templatePromise","Templates","render","setBody","setSaveButtonText","on","ModalEvents","bodyRendered","checked","elements","querySelectorAll","forEach","ele","disabled","save","checkedElement","updateComparisonMethodPreference","hidden","destroy","show","fail","startDatetime","endDateTime","url","courseid","engagementDataPromise","getUserEngagementData","data","length","langString","graphData","getGraphDataPlaceholder","legend_options","series","getSeriesPlaceholder","label","values","colour","Math","random","toString","colors","fill","push","labels","xlabels","axes","y","max","stepSize","stepsize","yLabels","ylabels","element","chartArea","chartImage","innerHTML","ChartBuilder","make","chart","ChartJSOutput","start","end","comparison","Ajax","call","methodname","args","request","name"],"mappings":"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","sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Uses the local_ace webservices to create engagement charts\n *\n * @module      local_ace/student_engagement\n * @copyright   2021 University of Canterbury\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport {get_string as getString} from 'core/str';\nimport ModalFactory from 'core/modal_factory';\nimport Templates from 'core/templates';\nimport ModalEvents from \"core/modal_events\";\nimport ChartBuilder from 'core/chart_builder';\nimport ChartJSOutput from 'core/chart_output_chartjs';\nimport {init as filtersInit} from 'local_ace/chart_filters';\n\nlet USER_ID = {};\n// Stores the chosen comparison method.\nlet COMPARISON_OPTION = 'average-course-engagement';\n// Stores the current time method, allowing us to update the graph without supplying values.\nlet START_TIME = null;\nlet END_TIME = null;\n// Toggles the retrieval of a single course vs all courses enrolled in.\nlet SHOW_ALL_COURSES = false;\n// Stores randomised colours against course shortnames.\nlet COURSE_COLOUR_MATCH = [];\n\n/**\n * Retrieves data from the local_ace webservice to populate an engagement graph\n *\n * @param {Object} parameters Data passed from the server.\n */\nexport const init = (parameters) => {\n    USER_ID = parameters.userid;\n    filtersInit(updateGraph);\n\n    // Hide the 'Show all courses' button on every tab except 'Overall' (course=0).\n    let params = new URLSearchParams(new URL(window.location.href).search);\n    if (params.has('course')) {\n        if (parseInt(params.get('course')) === 0) {\n            document.querySelector('#show-courses-buttons').style.display = null;\n        }\n    }\n\n    // Setup chart comparison control.\n    let chartComparisonButton = document.querySelector(\"#chart-comparison\");\n    chartComparisonButton.addEventListener(\"click\", createChartComparisonModal);\n    // Retrieve user preference and set our comparison option, then update the graph.\n    getComparisonMethodPreference().then(response => {\n        if (response.error) {\n            displayError(response.error);\n            return;\n        }\n        if (response.preferences[0].value !== null) {\n            COMPARISON_OPTION = response.preferences[0].value;\n        }\n        updateGraph();\n        return;\n    }).catch(Notification.exception);\n\n\n    document.querySelector(\"#show-all-courses\").addEventListener(\"click\", showAllCourses);\n    document.querySelector(\"#show-your-course\").addEventListener(\"click\", showYourCourse);\n};\n\nconst showAllCourses = function() {\n    document.querySelector(\"#show-all-courses\").style.display = 'none';\n    document.querySelector(\"#show-your-course\").style.display = null;\n    SHOW_ALL_COURSES = true;\n    document.querySelector(\"#student-engagement-legend\").style.display = 'none';\n    updateGraph();\n};\n\nconst showYourCourse = function() {\n    document.querySelector(\"#show-your-course\").style.display = 'none';\n    document.querySelector(\"#show-all-courses\").style.display = null;\n    document.querySelector(\"#student-engagement-legend\").style.display = null;\n    SHOW_ALL_COURSES = false;\n    updateGraph();\n};\n\n/**\n * Creates the chart comparison modal.\n */\nconst createChartComparisonModal = function() {\n    var modalPromise = ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL});\n\n    modalPromise.then(function(modal) {\n        modal.getRoot()[0].classList.add('chart-comparison-modal');\n        modal.setTitle(\"Change course comparison data\");\n        let templatePromise = Templates.render('local_ace/chart_comparison_body', {});\n        modal.setBody(templatePromise);\n        modal.setSaveButtonText(\"Filter\");\n\n        // Check the comparison option on load.\n        modal.getRoot().on(ModalEvents.bodyRendered, function() {\n            document.querySelector('#comparison-' + COMPARISON_OPTION).checked = true;\n            // If all courses are shown then we cannot show comparisons.\n            if (SHOW_ALL_COURSES) {\n                let elements = document.querySelectorAll('input[name=\"comparison-options\"]');\n                elements.forEach((ele) => {\n                    ele.disabled = true;\n                });\n            }\n        });\n\n        // Update COMPARISON_OPTION when the modal is saved.\n        modal.getRoot().on(ModalEvents.save, function() {\n            let checkedElement = document.querySelector('input[name=\"comparison-options\"]:checked');\n            if (checkedElement !== null) {\n                COMPARISON_OPTION = checkedElement.value;\n            } else {\n                COMPARISON_OPTION = 'none';\n            }\n            updateGraph();\n            updateComparisonMethodPreference();\n        });\n\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            // Destroy when hidden, removes modal HTML from document.\n            modal.destroy();\n        });\n\n        modal.show();\n\n        return modal;\n    }).fail(Notification.exception);\n};\n\n/**\n * Update the graph display based on values fetched from a webservice.\n *\n * @param {Number|null} startDatetime\n * @param {Number|null} endDateTime\n */\nconst updateGraph = (startDatetime = START_TIME, endDateTime = END_TIME) => {\n    if (START_TIME !== startDatetime) {\n        START_TIME = startDatetime;\n    }\n    if (END_TIME !== endDateTime) {\n        END_TIME = endDateTime;\n    }\n\n    let url = new URL(window.location.href);\n    let params = new URLSearchParams(url.search);\n    let courseid = null;\n    if (params.has('course')) {\n        courseid = parseInt(params.get('course'));\n    }\n    let engagementDataPromise = getUserEngagementData(courseid, USER_ID, START_TIME, END_TIME)\n        .then(function(response) {\n            // Check for any errors before processing.\n            if (response.error !== null) {\n                displayError(response.error);\n                return null;\n            } else if (response.data.length === 0) {\n                getString('noanalytics', 'local_ace').then((langString) => {\n                    displayError(langString);\n                    return;\n                }).catch();\n                return null;\n            }\n\n            // Populate empty fields.\n            let graphData = getGraphDataPlaceholder();\n            graphData.legend_options.display = SHOW_ALL_COURSES;\n            // Create individual series data.\n            response.data.forEach((data) => {\n                let series = getSeriesPlaceholder();\n                series.label = data.label;\n                series.values = data.values;\n                // Randomise the colour of courses.\n                if (SHOW_ALL_COURSES || data.colour === undefined) {\n                    if (!COURSE_COLOUR_MATCH[series.label]) {\n                        COURSE_COLOUR_MATCH[series.label] = parseInt(Math.random() * 0xffffff).toString(16);\n                    }\n                    series.colors = ['#' + COURSE_COLOUR_MATCH[series.label]];\n                } else {\n                    series.colors = [data.colour];\n                }\n                series.fill = data.fill ? 1 : null;\n                graphData.series.push(series);\n            });\n            graphData.labels = response.xlabels;\n            graphData.axes.y[0].max = response.max;\n            graphData.axes.y[0].stepSize = response.stepsize;\n            let yLabels = {};\n            response.ylabels.forEach((element) => {\n                yLabels[element.value] = element.label;\n            });\n            graphData.axes.y[0].labels = yLabels;\n\n            return graphData;\n        }).catch(function() {\n            displayError(\"API returned an error\");\n        });\n\n    engagementDataPromise.then((data) => {\n        if (data === null) {\n            return;\n        }\n        let chartArea = document.querySelector('#chart-area-engagement');\n        let chartImage = chartArea.querySelector('.chart-image');\n        chartImage.innerHTML = \"\";\n        ChartBuilder.make(data).then((chart) => {\n            new ChartJSOutput(chartImage, chart);\n            return;\n        }).catch();\n        return;\n    }).catch();\n};\n\n/**\n * Display an error on the page, which replaces the engagement graphs on the page.\n *\n * @param {String} langString Text displayed on the page\n */\nconst displayError = (langString) => {\n    let chartArea = document.querySelector('#chart-area-engagement');\n    let chartImage = chartArea.querySelector('.chart-image');\n    chartImage.innerHTML = langString;\n};\n\n/**\n * Get analytics data for specific user and course, within a certain period and after a starting time.\n *\n * @param {Number|null} courseid Course ID\n * @param {Number} userid User ID\n * @param {Number} start Start time of analytics period in seconds\n * @param {Number} end End of analytics period in seconds\n * @param {String} comparison Comparison method\n * @returns {Promise}\n */\nconst getUserEngagementData = (courseid, userid, start, end, comparison = COMPARISON_OPTION) => {\n    return Ajax.call([{\n        methodname: 'local_ace_get_user_analytics_graph',\n        args: {\n            'courseid': courseid,\n            'userid': userid,\n            'start': start,\n            'end': end,\n            'comparison': comparison,\n            'showallcourses': SHOW_ALL_COURSES,\n        },\n    }])[0];\n};\n\n/**\n * Updates the comparison method user preference.\n */\nconst updateComparisonMethodPreference = function() {\n    let request = {\n        methodname: 'core_user_update_user_preferences',\n        args: {\n            preferences: [\n                {\n                    type: 'local_ace_comparison_method',\n                    value: COMPARISON_OPTION\n                }\n            ]\n        }\n    };\n\n    Ajax.call([request])[0].fail(Notification.exception);\n};\n\n/**\n * Return a promise for the comparison method user preference.\n *\n * @returns {Promise}\n */\nconst getComparisonMethodPreference = function() {\n    let request = {\n        methodname: 'core_user_get_user_preferences',\n        args: {\n            name: 'local_ace_comparison_method'\n        }\n    };\n    return Ajax.call([request])[0];\n};\n\n/**\n * Get a graph.js data object filled out with the values we need for a student engagement graph.\n *\n * @returns {Object}\n */\nconst getGraphDataPlaceholder = () => {\n    return {\n        \"type\": \"line\",\n        \"series\": [],\n        \"labels\": null,\n        \"title\": null,\n        \"axes\": {\n            \"x\": [],\n            \"y\": [\n                {\n                    \"label\": null,\n                    \"labels\": {},\n                    \"max\": null,\n                    \"min\": 0,\n                    \"position\": null,\n                    \"stepSize\": null\n                }\n            ]\n        },\n        \"legend_options\": {\n            \"display\": false\n        },\n        \"config_colorset\": null,\n        \"smooth\": true\n    };\n};\n\nconst getSeriesPlaceholder = () => {\n    return {\n        \"label\": \"\",\n        \"labels\": null,\n        \"type\": null,\n        \"values\": [],\n        \"colors\": [],\n        \"fill\": null,\n        \"axes\": {\n            \"x\": null,\n            \"y\": null\n        },\n        \"urls\": [],\n        \"smooth\": null\n    };\n};\n"],"file":"student_engagement.min.js"}