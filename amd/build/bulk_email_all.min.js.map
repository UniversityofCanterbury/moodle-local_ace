{"version":3,"file":"bulk_email_all.min.js","sources":["../src/bulk_email_all.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Bulk email all students in a report\n *\n * @module      local_ace/bulk_emails_all\n * @copyright   2021 University of Canterbury\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport Templates from 'core/templates';\nimport ModalEvents from 'core/modal_events';\nimport * as Str from 'core/str';\nimport Ajax from 'core/ajax';\nimport * as Toast from 'core/toast';\nimport Notification from 'core/notification';\n\nexport const init = () => {\n    let strings = [\n        {\n            key: 'emailsend',\n            component: 'local_ace'\n        },\n        {\n            key: 'bulkemailall',\n            component: 'local_ace',\n        }\n    ];\n    let emailSend = '';\n    Str.get_strings(strings).then(function(langStrings) {\n        emailSend = langStrings[0];\n        let emailSelected = langStrings[1];\n        let templatePromise = Templates.render('local_ace/bulk_email_selected', {});\n        return ModalFactory.create({\n            title: emailSelected,\n            body: templatePromise,\n            type: ModalFactory.types.SAVE_CANCEL,\n        });\n    }).done(function(modal) {\n        modal.getRoot()[0].classList.add('local_ace-slim-modal');\n        modal.setSaveButtonText(emailSend);\n        modal.getRoot().on(ModalEvents.save, function() {\n            let tableuniqueid = document.querySelector('.tab-pane.fade.active.show .table-dynamic');\n            if (tableuniqueid === null) {\n                tableuniqueid = document.querySelector('.table-dynamic');\n            }\n            tableuniqueid = tableuniqueid.getAttribute('data-table-uniqueid');\n            let reportid = tableuniqueid.split('custom-report-table-')[1];\n            let subject = document.querySelector('#local_ace-email-subject').value;\n            let body = document.querySelector('#local_ace-email-body').value;\n            sendBulkEmailsAll(reportid, subject, body).then(response => {\n                Toast.add(response.message ?? 'An error occurred', {});\n            });\n        });\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, function() {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n        // Show the modal.\n        modal.show();\n        return;\n    }).catch(Notification.exception);\n};\n\n/**\n * Send bulk email to all of the users in a report.\n *\n * @param {Int} reportid\n * @param {String} subject\n * @param {String} body\n * @return {Promise}\n */\nconst sendBulkEmailsAll = (reportid, subject, body) => {\n    return Ajax.call([{\n        methodname: 'local_ace_send_bulk_emails_all',\n        args: {\n            'reportid': reportid,\n            'subject': subject,\n            'body': body\n        },\n    }])[0];\n};\n"],"names":["emailSend","Str","get_strings","key","component","then","langStrings","emailSelected","templatePromise","Templates","render","ModalFactory","create","title","body","type","types","SAVE_CANCEL","done","modal","getRoot","classList","add","setSaveButtonText","on","ModalEvents","save","tableuniqueid","document","querySelector","getAttribute","reportid","split","subject","value","sendBulkEmailsAll","response","Toast","message","hidden","destroy","show","catch","Notification","exception","Ajax","call","methodname","args"],"mappings":";;;;;;;sZA+BoB,SAWZA,UAAY,GAChBC,IAAIC,YAXU,CACV,CACIC,IAAK,YACLC,UAAW,aAEf,CACID,IAAK,eACLC,UAAW,eAIMC,MAAK,SAASC,aACnCN,UAAYM,YAAY,OACpBC,cAAgBD,YAAY,GAC5BE,gBAAkBC,mBAAUC,OAAO,gCAAiC,WACjEC,uBAAaC,OAAO,CACvBC,MAAON,cACPO,KAAMN,gBACNO,KAAMJ,uBAAaK,MAAMC,iBAE9BC,MAAK,SAASC,OACbA,MAAMC,UAAU,GAAGC,UAAUC,IAAI,wBACjCH,MAAMI,kBAAkBvB,WACxBmB,MAAMC,UAAUI,GAAGC,sBAAYC,MAAM,eAC7BC,cAAgBC,SAASC,cAAc,6CACrB,OAAlBF,gBACAA,cAAgBC,SAASC,cAAc,mBAE3CF,cAAgBA,cAAcG,aAAa,2BACvCC,SAAWJ,cAAcK,MAAM,wBAAwB,GACvDC,QAAUL,SAASC,cAAc,4BAA4BK,MAC7DpB,KAAOc,SAASC,cAAc,yBAAyBK,MAC3DC,kBAAkBJ,SAAUE,QAASnB,MAAMT,MAAK+B,iCAC5CC,MAAMf,8BAAIc,SAASE,uDAAW,oBAAqB,UAI3DnB,MAAMC,UAAUI,GAAGC,sBAAYc,QAAQ,WAEnCpB,MAAMqB,aAGVrB,MAAMsB,UAEPC,MAAMC,sBAAaC,kBAWpBT,kBAAoB,CAACJ,SAAUE,QAASnB,OACnC+B,cAAKC,KAAK,CAAC,CACdC,WAAY,iCACZC,KAAM,UACUjB,iBACDE,aACHnB,SAEZ"}