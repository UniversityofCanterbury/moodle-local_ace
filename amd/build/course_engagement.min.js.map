{"version":3,"file":"course_engagement.min.js","sources":["../src/course_engagement.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Shows the course engagement graph\n *\n * @module      local_ace/course_engagement\n * @copyright   2021 University of Canterbury\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport ChartBuilder from 'core/chart_builder';\nimport ChartJSOutput from 'core/chart_output_chartjs';\nimport {init as filtersInit} from 'local_ace/chart_filters';\n\nlet COURSE_ID = 0;\n// Stores the current time method, allowing us to update the graph without supplying values.\nlet START_TIME = null;\nlet END_TIME = null;\n\n/**\n * Initialise the course engagement graph\n *\n * @param {Object} parameters Data passed from the server.\n */\nexport const init = (parameters) => {\n    if (COURSE_ID !== 0) {\n        return;\n    }\n    COURSE_ID = parameters.courseid;\n    filtersInit(updateGraph);\n\n    document.addEventListener(\n        \"local_ace-graph-reload\",\n        () => {\n            updateGraph(START_TIME, END_TIME);\n        },\n        false,\n    );\n};\n\n/**\n * Display an error on the page, which replaces the engagement graphs on the page.\n *\n * @param {string} langString Text displayed on the page\n */\nconst displayError = (langString) => {\n    let chartArea = document.querySelector('#chart-area-engagement');\n    let chartImage = chartArea.querySelector('.chart-image');\n    chartImage.innerHTML = langString;\n};\n\n/**\n * Update the graph display based on values fetched from a webservice.\n *\n * @param {Number|null} startDatetime\n * @param {Number|null} endDateTime\n */\nconst updateGraph = (startDatetime, endDateTime) => {\n    if (START_TIME !== startDatetime) {\n        START_TIME = startDatetime;\n    }\n    if (END_TIME !== endDateTime) {\n        END_TIME = endDateTime;\n    }\n\n    let engagementData = getCourseEngagementData(null, startDatetime, endDateTime).then((response) => {\n        if (response.error !== null || response.series.length === 0) {\n            displayError(response.error);\n            return null;\n        }\n        let data = getGraphDataPlaceholder();\n\n        let legendContainer = document.getElementById('local_ace-graph-series-legend');\n        legendContainer.innerHTML = '';\n        let warningsContainer = document.getElementById('local_ace-graph-warnings');\n        warningsContainer.innerHTML = '';\n\n        response.series.forEach((series) => {\n            data.series.push({\n                \"label\": series.label,\n                \"values\": series.values,\n                \"colors\": [series.colour],\n                \"axes\": {},\n            });\n            // Add legend boxes.\n            let legendBox = document.createElement(\"span\");\n            legendBox.className = 'legendbox';\n            legendBox.style.cssText = 'background-color: ' + series.colour;\n            legendContainer.appendChild(legendBox);\n            let legendText = document.createElement(\"span\");\n            legendText.className = 'legendtext';\n            legendText.innerText = series.legend;\n            legendContainer.appendChild(legendText);\n            // Add warnings.\n            if (series.warning !== null) {\n                warningsContainer.append(series.warning);\n            }\n        });\n\n        data.labels = response.xlabels;\n        data.axes.y[0].max = 100;\n        data.axes.y[0].stepSize = 25;\n        let yLabels = {};\n        response.ylabels.forEach((element) => {\n            yLabels[element.value] = element.label;\n        });\n        data.axes.y[0].labels = yLabels;\n\n        return data;\n    }).catch(() => {\n        displayError(\"API Error\");\n    });\n\n    engagementData.then((data) => {\n        if (data === null) {\n            return;\n        }\n        let chartArea = document.querySelector('#chart-area-engagement');\n        let chartImage = chartArea.querySelector('.chart-image');\n        chartImage.innerHTML = \"\";\n        ChartBuilder.make(data).then((chart) => {\n            new ChartJSOutput(chartImage, chart);\n            return;\n        }).catch();\n        return;\n    }).catch();\n};\n\nconst getGraphDataPlaceholder = () => {\n    return {\n        \"type\": \"line\",\n        \"series\": [\n        ],\n        \"labels\": null,\n        \"title\": null,\n        \"axes\": {\n            \"x\": [],\n            \"y\": [\n                {\n                    \"label\": null,\n                    \"labels\": {},\n                    \"max\": null,\n                    \"min\": 0,\n                    \"position\": null,\n                    \"stepSize\": null\n                }\n            ]\n        },\n        \"legend_options\": {\n            \"display\": false\n        },\n        \"config_colorset\": null,\n        \"smooth\": true\n    };\n};\n\n/**\n * Get course analytics data\n *\n * @param {Number|null} period Display period\n * @param {Number|null} start Start time of analytics period in seconds\n * @param {Number|null} end End of analytics period in seconds\n * @returns {Promise}\n */\nconst getCourseEngagementData = (period, start, end) => {\n    return Ajax.call([{\n        methodname: 'local_ace_get_course_analytics_graph',\n        args: {\n            'courseid': COURSE_ID,\n            'period': period,\n            'start': start,\n            'end': end\n        },\n    }])[0];\n};\n"],"names":["COURSE_ID","START_TIME","END_TIME","parameters","courseid","updateGraph","document","addEventListener","displayError","langString","querySelector","innerHTML","startDatetime","endDateTime","getCourseEngagementData","then","response","error","series","length","data","getGraphDataPlaceholder","legendContainer","getElementById","warningsContainer","forEach","push","label","values","colour","legendBox","createElement","className","style","cssText","appendChild","legendText","innerText","legend","warning","append","labels","xlabels","axes","y","max","stepSize","yLabels","ylabels","element","value","catch","chartImage","make","chart","ChartJSOutput","period","start","end","Ajax","call","methodname","args"],"mappings":";;;;;;;oPA4BIA,UAAY,EAEZC,WAAa,KACbC,SAAW,mBAOMC,aACC,IAAdH,YAGJA,UAAYG,WAAWC,iCACXC,aAEZC,SAASC,iBACL,0BACA,KACIF,YAAYJ,WAAYC,aAE5B,WASFM,aAAgBC,aACFH,SAASI,cAAc,0BACZA,cAAc,gBAC9BC,UAAYF,YASrBJ,YAAc,CAACO,cAAeC,eAC5BZ,aAAeW,gBACfX,WAAaW,eAEbV,WAAaW,cACbX,SAAWW,aAGMC,wBAAwB,KAAMF,cAAeC,aAAaE,MAAMC,cAC1D,OAAnBA,SAASC,OAA6C,IAA3BD,SAASE,OAAOC,cAC3CX,aAAaQ,SAASC,OACf,SAEPG,KAAOC,0BAEPC,gBAAkBhB,SAASiB,eAAe,iCAC9CD,gBAAgBX,UAAY,OACxBa,kBAAoBlB,SAASiB,eAAe,4BAChDC,kBAAkBb,UAAY,GAE9BK,SAASE,OAAOO,SAASP,SACrBE,KAAKF,OAAOQ,KAAK,OACJR,OAAOS,aACNT,OAAOU,cACP,CAACV,OAAOW,aACV,SAGRC,UAAYxB,SAASyB,cAAc,QACvCD,UAAUE,UAAY,YACtBF,UAAUG,MAAMC,QAAU,qBAAuBhB,OAAOW,OACxDP,gBAAgBa,YAAYL,eACxBM,WAAa9B,SAASyB,cAAc,QACxCK,WAAWJ,UAAY,aACvBI,WAAWC,UAAYnB,OAAOoB,OAC9BhB,gBAAgBa,YAAYC,YAEL,OAAnBlB,OAAOqB,SACPf,kBAAkBgB,OAAOtB,OAAOqB,YAIxCnB,KAAKqB,OAASzB,SAAS0B,QACvBtB,KAAKuB,KAAKC,EAAE,GAAGC,IAAM,IACrBzB,KAAKuB,KAAKC,EAAE,GAAGE,SAAW,OACtBC,QAAU,UACd/B,SAASgC,QAAQvB,SAASwB,UACtBF,QAAQE,QAAQC,OAASD,QAAQtB,SAErCP,KAAKuB,KAAKC,EAAE,GAAGH,OAASM,QAEjB3B,QACR+B,OAAM,KACL3C,aAAa,gBAGFO,MAAMK,UACJ,OAATA,gBAIAgC,WADY9C,SAASI,cAAc,0BACZA,cAAc,gBACzC0C,WAAWzC,UAAY,0BACV0C,KAAKjC,MAAML,MAAMuC,YACtBC,8BAAcH,WAAYE,UAE/BH,WAEJA,SAGD9B,wBAA0B,KACrB,MACK,cACE,UAEA,WACD,UACD,GACC,KACA,CACD,OACa,YACC,OACH,SACA,WACK,cACA,uBAIN,UACH,mBAEI,aACT,IAYZP,wBAA0B,CAAC0C,OAAQC,MAAOC,MACrCC,cAAKC,KAAK,CAAC,CACdC,WAAY,uCACZC,KAAM,UACU9D,iBACFwD,aACDC,UACFC,QAEX"}