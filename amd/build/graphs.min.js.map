{"version":3,"sources":["../src/graphs.js"],"names":["Selectors","chartFilterOptions","courseToDate","last12Days","startDate","init","filter","getActiveFilter","document","querySelector","setActiveFilter","setupFilters","updateGraph","startDatetime","isNaN","url","URL","window","location","href","params","URLSearchParams","search","userid","parseInt","get","courseid","has","getUserEngagementData","then","response","chartArea","chartImage","innerHTML","error","displayError","series","length","langString","graphData","getGraphDataPlaceholder","values","average1","average2","labels","axes","y","max","stepSize","stepsize","yLabels","ylabels","forEach","element","value","label","ChartBuilder","make","chart","ChartJSOutput","catch","suppliedFilter","getFilterNodes","dataset","updateFilterDisplay","type","addEventListener","val","Date","getTime","toFixed","daysSelector","substr","id","date","setDate","getDate","filters","classList","add","remove","find","filtersNode","start","Ajax","call","methodname","args"],"mappings":"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","sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Uses the local_ace webservices to create engagement charts\n *\n * @package     local_ace\n * @copyright   2021 University of Canterbury\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport {get_string as getString} from 'core/str';\nimport ChartBuilder from 'core/chart_builder';\nimport ChartJSOutput from 'core/chart_output_chartjs';\n\nconst FILTER_ACTIVE = \"active\";\n\nconst Selectors = {\n    chartFilterOptions: \"#chart-filter-options\",\n    courseToDate: \"#course-to-date\",\n    last12Days: \"#last-12-days\",\n    startDate: \"#start-date\",\n};\n\n/**\n * Retrieves data from the local_ace webservice to populate an engagement graph\n */\nexport const init = () => {\n    // Set default filter, update display, set handlers\n    let filter = getActiveFilter();\n    if (filter === null) {\n        // Course to date is our default filter\n        filter = document.querySelector(Selectors.courseToDate);\n        setActiveFilter(filter);\n    }\n\n    setupFilters();\n    updateGraph();\n};\n\n/**\n * Update the graph display based on values fetched from a webservice.\n *\n * @param {Number|null} startDatetime\n */\nconst updateGraph = (startDatetime) => {\n    startDatetime = isNaN(startDatetime) ? null : startDatetime;\n    let url = new URL(window.location.href);\n    let params = new URLSearchParams(url.search);\n    let userid = parseInt(params.get('id'));\n    let courseid = null;\n    if (params.has('course')) {\n        courseid = parseInt(params.get('course'));\n    }\n    getUserEngagementData(courseid, userid, startDatetime).then(function(response) {\n        let chartArea = document.querySelector('#chart-area-engagement');\n        let chartImage = chartArea.querySelector('.chart-image');\n        chartImage.innerHTML = \"\";\n\n        if (response.error !== null) {\n            displayError(response.error);\n            return;\n        } else if (response.series.length === 0) {\n            getString('noanalytics', 'local_ace').then((langString) => {\n                displayError(langString);\n            });\n            return;\n        }\n\n        let graphData = getGraphDataPlaceholder();\n        graphData.series[0].values = response.series;\n        graphData.series[1].values = response.average1;\n        graphData.series[2].values = response.average2;\n        graphData.labels = response.labels;\n        graphData.axes.y[0].max = response.max;\n        graphData.axes.y[0].stepSize = response.stepsize;\n        let yLabels = {};\n        response.ylabels.forEach((element) => {\n            yLabels[element.value] = element.label;\n        });\n        graphData.axes.y[0].labels = yLabels;\n\n        ChartBuilder.make(graphData).then((chart) => {\n            new ChartJSOutput(chartImage, chart);\n        });\n    }).catch(function() {\n        displayError(\"API returned an error\");\n    });\n};\n\n/**\n * Set the active filter.\n *\n * @param {Element} suppliedFilter\n */\nconst setActiveFilter = (suppliedFilter) => {\n    getFilterNodes().forEach((filter) => {\n        if (filter === suppliedFilter) {\n            filter.dataset.filter = FILTER_ACTIVE;\n        } else {\n            filter.dataset.filter = null;\n        }\n\n        updateFilterDisplay();\n    });\n};\n\n/**\n * Set up the click/change listeners on the filter buttons.\n * When detected set the active filter and pass the new date through to the graph.\n */\nconst setupFilters = () => {\n    getFilterNodes().forEach((filter) => {\n        if (filter.type === \"date\") {\n            filter.addEventListener(\"change\", () => {\n                setActiveFilter(filter);\n                let val = new Date(filter.value).getTime() / 1000;\n                val = val.toFixed(0);\n                if (isNaN(val)) {\n                    val = null;\n                }\n                updateGraph(val);\n            });\n        } else {\n            filter.addEventListener(\"click\", () => {\n                setActiveFilter(filter);\n\n                let daysSelector = Selectors.last12Days.substr(1, Selectors.last12Days.length);\n                if (filter.id === daysSelector) {\n                    var date = new Date();\n                    date.setDate(date.getDate() - 12);\n                    let val = date.getTime() / 1000;\n                    updateGraph(val.toFixed(0));\n                } else {\n                    updateGraph(null);\n                }\n            });\n        }\n    });\n};\n\n/**\n * Update the filter colours to display which is active.\n */\nconst updateFilterDisplay = () => {\n    let filters = getFilterNodes();\n    filters.forEach((filter) => {\n        if (filter.dataset.filter === FILTER_ACTIVE) {\n            if (filter.type === \"date\") {\n                filter.classList.add(\"border-primary\");\n            } else {\n                filter.classList.add(\"btn-primary\");\n                filter.classList.remove(\"btn-secondary\");\n            }\n        } else {\n            filter.classList.add(\"btn-secondary\");\n            filter.classList.remove(\"border-primary\");\n            filter.classList.remove(\"btn-primary\");\n        }\n    });\n};\n\n/**\n * Get the active filter DOM element.\n *\n * @returns {null|Element}\n */\nconst getActiveFilter = () => {\n    let filters = getFilterNodes();\n    let filter = filters.find(filter => filter.dataset.filter === FILTER_ACTIVE);\n    if (filter !== undefined) {\n        return filter;\n    }\n    return null;\n};\n\n/**\n * Get the DOM element of chart filters on the page.\n *\n * @returns {[Element]}\n */\nconst getFilterNodes = () => {\n    let filtersNode = document.querySelector(Selectors.chartFilterOptions);\n    return [\n        filtersNode.querySelector(Selectors.courseToDate),\n        filtersNode.querySelector(Selectors.last12Days),\n        filtersNode.querySelector(Selectors.startDate)\n    ];\n};\n\n/**\n * Display an error on the page, which replaces the engagement graphs on the page.\n *\n * @param {string} langString Text displayed on the page\n */\nconst displayError = (langString) => {\n    let chartArea = document.querySelector('#chart-area-engagement');\n    let chartImage = chartArea.querySelector('.chart-image');\n    chartImage.innerHTML = langString;\n};\n\n/**\n * Get analytics data for specific user and course, within a certain period and after a starting time.\n *\n * @param {number|null} courseid Course ID\n * @param {number} userid User ID\n * @param {number} period User history period\n * @param {number} start Start time of analytics in seconds\n * @returns {Promise}\n */\nconst getUserEngagementData = (courseid, userid, start) => {\n    return Ajax.call([{\n        methodname: 'local_ace_get_user_analytics_graph',\n        args: {\n            'courseid': courseid,\n            'userid': userid,\n            'start': start\n        },\n    }])[0];\n};\n\n/**\n * Get a graph.js data object filled out with the values we need for a student engagement graph.\n * TODO: Pull graph colours from plugin settings.\n *\n * @returns {Object}\n */\nconst getGraphDataPlaceholder = () => {\n    return {\n        \"type\": \"line\",\n        \"series\": [\n            {\n                \"label\": \" Your engagement\",\n                \"labels\": null,\n                \"type\": null,\n                \"values\": null,\n                \"colors\": [\"#5cb85c\"],\n                \"fill\": null,\n                \"axes\": {\n                    \"x\": null,\n                    \"y\": null\n                },\n                \"urls\": [],\n                \"smooth\": null\n            },\n            {\n                \"label\": \"Average course engagement\",\n                \"labels\": null,\n                \"type\": null,\n                \"values\": null,\n                \"colors\": [\"#CEE9CE\"],\n                \"fill\": null,\n                \"axes\": {\n                    \"x\": null,\n                    \"y\": null\n                },\n                \"urls\": [],\n                \"smooth\": null\n            },\n            {\n                \"label\": \"Average course engagement\",\n                \"labels\": null,\n                \"type\": null,\n                \"values\": null,\n                \"colors\": [\"#CEE9CE\"],\n                \"fill\": 1,\n                \"axes\": {\n                    \"x\": null,\n                    \"y\": null\n                },\n                \"urls\": [],\n                \"smooth\": null\n            }\n        ],\n        \"labels\": null,\n        \"title\": null,\n        \"axes\": {\n            \"x\": [],\n            \"y\": [\n                {\n                    \"label\": null,\n                    \"labels\": {},\n                    \"max\": null,\n                    \"min\": 0,\n                    \"position\": null,\n                    \"stepSize\": null\n                }\n            ]\n        },\n        \"legend_options\": {\n            \"display\": false\n        },\n        \"config_colorset\": null,\n        \"smooth\": true\n    };\n};\n"],"file":"graphs.min.js"}