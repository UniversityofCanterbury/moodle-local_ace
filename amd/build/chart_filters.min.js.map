{"version":3,"sources":["../src/chart_filters.js"],"names":["Selectors","chartFilterOptions","courseToDate","last12Days","dateRange","updateFunc","init","providedFunc","filter","getActiveFilter","document","querySelector","setActiveFilter","setupFilters","suppliedFilter","getFilterNodes","forEach","dataset","updateFilterDisplay","filtersNode","courseToDateFilter","addEventListener","picker","clearSelection","last12DaysFilter","date","Date","setDate","getDate","val","getTime","toFixed","dateRangeFilter","Litepicker","format","element","singleMode","splitView","setup","on","date1","date2","timestamp","filters","classList","add","remove","find"],"mappings":"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","sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Provides the chart filters for engagement graphs\n *\n * @module      local_ace/chart_filters\n * @copyright   2021 University of Canterbury\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Litepicker from 'local_ace/litepicker';\n\nconst FILTER_ACTIVE = \"active\";\n\nconst Selectors = {\n    chartFilterOptions: \"#chart-filter-options\",\n    courseToDate: \"#course-to-date\",\n    last12Days: \"#last-12-days\",\n    dateRange: \"#date-range\",\n};\n\nlet updateFunc = null;\n\n/**\n * Retrieves data from the local_ace webservice to populate an engagement graph\n *\n * @param {Function} providedFunc graph function\n */\nexport const init = (providedFunc) => {\n    // Set default filter, update display, set handlers\n    let filter = getActiveFilter();\n    if (filter === null) {\n        // Course to date is our default filter\n        filter = document.querySelector(Selectors.courseToDate);\n        setActiveFilter(filter);\n    }\n\n    setupFilters();\n    updateFunc = providedFunc;\n};\n\n/**\n * Set the active filter.\n *\n * @param {Element} suppliedFilter\n */\nconst setActiveFilter = (suppliedFilter) => {\n    getFilterNodes().forEach((filter) => {\n        if (filter === suppliedFilter) {\n            filter.dataset.filter = FILTER_ACTIVE;\n        } else {\n            filter.dataset.filter = null;\n        }\n\n        updateFilterDisplay();\n    });\n};\n\n/**\n * Set up the click/change listeners on the filter buttons.\n * When detected set the active filter and pass the new date through to the graph.\n */\nconst setupFilters = () => {\n    let filtersNode = document.querySelector(Selectors.chartFilterOptions);\n\n    let courseToDateFilter = filtersNode.querySelector(Selectors.courseToDate);\n    courseToDateFilter.addEventListener(\"click\", () => {\n        setActiveFilter(courseToDateFilter);\n        updateFunc(null, null);\n        picker.clearSelection();\n    });\n\n    let last12DaysFilter = filtersNode.querySelector(Selectors.last12Days);\n    last12DaysFilter.addEventListener(\"click\", () => {\n        setActiveFilter(last12DaysFilter);\n        var date = new Date();\n        date.setDate(date.getDate() - 12);\n        let val = date.getTime() / 1000;\n        updateFunc(val.toFixed(0), null);\n        picker.clearSelection();\n    });\n\n    let dateRangeFilter = filtersNode.querySelector(Selectors.dateRange);\n    let picker = new Litepicker({\n        format: 'DD-MM-YYYY',\n        element: dateRangeFilter,\n        singleMode: false,\n        splitView: false,\n        setup: (picker) => {\n            picker.on('selected', (date1, date2) => {\n                if (date1 === undefined || date2 === undefined) {\n                    return;\n                }\n                setActiveFilter(dateRangeFilter);\n                updateFunc(date1.timestamp() / 1000, date2.timestamp() / 1000);\n            });\n        }\n    });\n    picker.clearSelection();\n};\n\n/**\n * Update the filter colours to display which is active.\n */\nconst updateFilterDisplay = () => {\n    let filters = getFilterNodes();\n    filters.forEach((filter) => {\n        if (filter.dataset.filter === FILTER_ACTIVE) {\n            filter.classList.add(\"btn-primary\");\n            filter.classList.remove(\"btn-secondary\");\n        } else {\n            filter.classList.add(\"btn-secondary\");\n            filter.classList.remove(\"btn-primary\");\n        }\n    });\n};\n\n/**\n * Get the active filter DOM element.\n *\n * @returns {null|Element}\n */\nconst getActiveFilter = () => {\n    let filters = getFilterNodes();\n    let filter = filters.find(filter => filter.dataset.filter === FILTER_ACTIVE);\n    if (filter !== undefined) {\n        return filter;\n    }\n    return null;\n};\n\n/**\n * Get the DOM element of chart filters on the page.\n *\n * @returns {[Element]}\n */\nconst getFilterNodes = () => {\n    let filtersNode = document.querySelector(Selectors.chartFilterOptions);\n    return [\n        filtersNode.querySelector(Selectors.courseToDate),\n        filtersNode.querySelector(Selectors.last12Days),\n        filtersNode.querySelector(Selectors.dateRange)\n    ];\n};\n"],"file":"chart_filters.min.js"}